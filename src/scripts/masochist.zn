library masochist requires MemoryHackUnitNormalAPI, mainRNG {
    integer masoid = 'U02T';
    public trigger maso_trigger = null;
    public trigger maso_created_trigger = null;
    
    function masochance(real dmg)->boolean {
        return (dmg>100) || (dmg>GenerateReal(MainGenerator,0,100));
    }
    
    function masoDamaged() {
        real dmg = GetEventDamage();
        if(masochance(dmg)) {
            AddUnitExtraAttack(GetTriggerUnit());
        }
    }
    
    function masoAdd(unit u) {
        TriggerRegisterUnitEvent(maso_trigger,u,EVENT_UNIT_DAMAGED);
    }
    
    function onInit()
    {
        region ALL = CreateRegion();
        rect r = Rect(-99999,-99999,999999,9999999);
        RegionAddRect(ALL,r);
        maso_trigger = CreateTrigger();
        TriggerAddAction(maso_trigger,function masoDamaged);
        maso_created_trigger = CreateTrigger();
        TriggerRegisterEnterRegion(maso_created_trigger,ALL,null);
        TriggerAddCondition(maso_created_trigger,function()->boolean {return GetUnitTypeId(GetTriggerUnit())==masoid;});
        TriggerAddAction(maso_created_trigger,function(){ masoAdd(GetEnteringUnit()); });

    }
    
    
}

library MasochistSelfdamage {
    integer spell_Id = 'A0MC';
    real damage = 100;
    public trigger masochist_self_harm = null;

    function OnUse() {
        UnitDamageTarget(GetTriggerUnit(),GetTriggerUnit(),damage,false,false,ATTACK_TYPE_CHAOS,DAMAGE_TYPE_UNKNOWN,WEAPON_TYPE_WHOKNOWS);
    }

    function Condition()->boolean {
        return GetSpellAbilityId()==spell_Id;
    }

    function onInit() {
        masochist_self_harm = CreateTrigger();
        TriggerAddCondition(masochist_self_harm,function Condition);
        TriggerAddAction(masochist_self_harm,function OnUse);
        TriggerRegisterAnyUnitEventBJ(masochist_self_harm,EVENT_PLAYER_UNIT_SPELL_ENDCAST);
    }
    
}